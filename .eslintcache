[{"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Home\\Home.jsx":"3","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\index.js":"4","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\index.js":"5","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\DialogContainers.js":"6","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\ChatInput\\ChatInput.js":"7","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\MessageItem\\MessageItem.js":"8","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Message\\Message.js":"9","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Auth\\Auth.jsx":"10","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\components\\LoginForm.jsx":"11","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\IconRead\\IconRead.js":"12","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\index.js":"13","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\containers\\LoginContainer.js":"14","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\containers\\RegisterContainer.js":"15","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\index.js":"16","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Button\\Button.js":"17","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\validator.js":"18","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\WhiteBlock\\WhiteBlock.js":"19","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\convertCurrentTime.js":"20","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Dialogs\\Dialogs.jsx":"21","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\DialogItem\\DialogItem.jsx":"22","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\validateField.js":"23","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\components\\RegisterForm.jsx":"24","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\store.js":"25","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\index.js":"26","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\dialogReduser.js":"27","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\DialogsAction.js":"28","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\DialogsAPI.js":"29","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\core\\axios.js":"30","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\MessageContainer.js":"31","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\MessageReducer.js":"32","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\MessageAction.js":"33","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\MessageAPI.js":"34","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\openNotification.js":"35","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\userReducer.js":"36","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\UsserAction.js":"37","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\UserAPI.js":"38","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\FormField\\FormField.jsx":"39","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\index.js":"40","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Success\\Success.jsx":"41","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\core\\socket.js":"42","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\ChatInputContainer.js":"43","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\SideBar\\SideBar.jsx":"44","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\SideBarContainers.js":"45","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\UploadFile\\UploadFiles.jsx":"46","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\Attachments.js":"47","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\UploadAPI.js":"48","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\AttachmentsAction.js":"49"},{"size":619,"mtime":1617550042520,"results":"50","hashOfConfig":"51"},{"size":652,"mtime":1615469382969,"results":"52","hashOfConfig":"51"},{"size":2001,"mtime":1616441562027,"results":"53","hashOfConfig":"51"},{"size":91,"mtime":1612092633142,"results":"54","hashOfConfig":"51"},{"size":76,"mtime":1612283311311,"results":"55","hashOfConfig":"51"},{"size":1603,"mtime":1616269458028,"results":"56","hashOfConfig":"51"},{"size":3697,"mtime":1617473717237,"results":"57","hashOfConfig":"51"},{"size":1476,"mtime":1617476033926,"results":"58","hashOfConfig":"51"},{"size":6029,"mtime":1617474996546,"results":"59","hashOfConfig":"51"},{"size":860,"mtime":1615232732859,"results":"60","hashOfConfig":"51"},{"size":2871,"mtime":1614627823872,"results":"61","hashOfConfig":"51"},{"size":338,"mtime":1612814044183,"results":"62","hashOfConfig":"51"},{"size":287,"mtime":1613026045199,"results":"63","hashOfConfig":"51"},{"size":1186,"mtime":1615616686550,"results":"64","hashOfConfig":"51"},{"size":1197,"mtime":1615233568847,"results":"65","hashOfConfig":"51"},{"size":126,"mtime":1614335044033,"results":"66","hashOfConfig":"51"},{"size":412,"mtime":1614333094888,"results":"67","hashOfConfig":"51"},{"size":534,"mtime":1612291996862,"results":"68","hashOfConfig":"51"},{"size":278,"mtime":1612021467609,"results":"69","hashOfConfig":"51"},{"size":195,"mtime":1612554293646,"results":"70","hashOfConfig":"51"},{"size":1479,"mtime":1617436659548,"results":"71","hashOfConfig":"51"},{"size":2167,"mtime":1617436845951,"results":"72","hashOfConfig":"51"},{"size":230,"mtime":1612294441336,"results":"73","hashOfConfig":"51"},{"size":2777,"mtime":1614763828829,"results":"74","hashOfConfig":"51"},{"size":281,"mtime":1614431073445,"results":"75","hashOfConfig":"51"},{"size":303,"mtime":1616514391706,"results":"76","hashOfConfig":"51"},{"size":553,"mtime":1615319739426,"results":"77","hashOfConfig":"51"},{"size":622,"mtime":1617472854216,"results":"78","hashOfConfig":"51"},{"size":184,"mtime":1615747065804,"results":"79","hashOfConfig":"51"},{"size":214,"mtime":1617539790897,"results":"80","hashOfConfig":"51"},{"size":2388,"mtime":1617477182899,"results":"81","hashOfConfig":"51"},{"size":920,"mtime":1615923727982,"results":"82","hashOfConfig":"51"},{"size":1528,"mtime":1617427286996,"results":"83","hashOfConfig":"51"},{"size":337,"mtime":1617199332184,"results":"84","hashOfConfig":"51"},{"size":158,"mtime":1614335141927,"results":"85","hashOfConfig":"51"},{"size":584,"mtime":1615615466465,"results":"86","hashOfConfig":"51"},{"size":2403,"mtime":1617448409323,"results":"87","hashOfConfig":"51"},{"size":368,"mtime":1615715229419,"results":"88","hashOfConfig":"51"},{"size":624,"mtime":1614628413793,"results":"89","hashOfConfig":"51"},{"size":90,"mtime":1612282616922,"results":"90","hashOfConfig":"51"},{"size":950,"mtime":1615059457960,"results":"91","hashOfConfig":"51"},{"size":129,"mtime":1617547681500,"results":"92","hashOfConfig":"51"},{"size":4295,"mtime":1617473694563,"results":"93","hashOfConfig":"51"},{"size":2415,"mtime":1617428835708,"results":"94","hashOfConfig":"51"},{"size":1752,"mtime":1615920341563,"results":"95","hashOfConfig":"51"},{"size":2154,"mtime":1617467962845,"results":"96","hashOfConfig":"51"},{"size":503,"mtime":1617468131055,"results":"97","hashOfConfig":"51"},{"size":335,"mtime":1617204482220,"results":"98","hashOfConfig":"51"},{"size":329,"mtime":1617467714707,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i2yqic",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"104"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"104"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"104"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"104"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"104"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"104"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"104"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"104"},"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\App.js",[],["231","232"],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Home\\Home.jsx",["233","234","235","236","237","238"],"import React,{useEffect}  from 'react';\r\nimport {FormOutlined, TeamOutlined, UnorderedListOutlined} from '@ant-design/icons'\r\nimport './../../styles/_chat.scss';\r\nimport './Home.scss'\r\n\r\nimport DialogsContainer from \"../../containers/DialogContainers\";\r\nimport MessageContainer from \"../../containers/MessageContainer\";\r\nimport ChatInputContainer from \"../../containers/ChatInputContainer\";\r\nimport {Button} from \"antd\";\r\nimport SideBar from \"../../components/SideBar/SideBar\";\r\nimport SideBarContainers from \"../../containers/SideBarContainers\";\r\nimport {withRouter} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport actions from \"../../redux/actions/DialogsAction\";\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    const {setCurrentDialog} = props;\r\n    useEffect(() => {\r\n        const {location: {pathname}} = props;\r\n        const dialogId = pathname.split('/').pop()\r\n        setCurrentDialog(dialogId)\r\n    }, [props.location.pathname])\r\n\r\n\r\n    return (\r\n        <section className={'home'}>\r\n            <div className=\"chat\">\r\n                <SideBarContainers/>\r\n                <div className=\"chat__dialogs\">\r\n                    <div className=\"chat__dialog-header\">\r\n                        <div></div>\r\n                        <div className=\"chat__dialog-header-center\">\r\n                            <b className=\"chat__dialog-header-username\">Гай Юлий Цезарь</b>\r\n                            <div className=\"chat__dialog-header-status\">\r\n                                <div className=\"status status--online\">онлайн</div>\r\n                            </div>\r\n                        </div>\r\n                        <UnorderedListOutlined style={{fontSize: '22px'}} />\r\n                    </div>\r\n                        <MessageContainer />\r\n                    <ChatInputContainer />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default withRouter(connect(\r\n    ({dialogReduser}) => dialogReduser, actions)(Home));","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\index.js",[],["239","240"],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\DialogContainers.js",["241","242"],"import React, {useEffect, useState} from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"../components/Dialogs/Dialogs\";\r\nimport actions from \"../redux/actions/DialogsAction\";\r\n\r\nimport socket from \"./../core/socket\";\r\n\r\nconst DialogsContainer = ({items, fetchDialogs, setCurrentDialog}) => {\r\n\r\n    const onNewDialog = () => {\r\n        fetchDialogs();\r\n    }\r\n    \r\n    const [inputValue, setValue] = useState('');\r\n    const [filtred, setFiltredItems] = useState(Array.from(items));\r\n    const onChangeInput = (value = '') => {\r\n        setFiltredItems(items.filter(dialog => dialog.author.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0 ||\r\n            dialog.partner.fullname.toLowerCase().indexOf(value.toLowerCase()) >= 0\r\n\r\n        ));\r\n\r\n        setValue(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!items.length) {\r\n            fetchDialogs();\r\n        } else {\r\n            setFiltredItems(items)\r\n        }\r\n        socket.on(\"SERVER:DIALOG_CREATED\", onNewDialog);\r\n        socket.on(\"SERVER:NEW_MESSAGE\", onNewDialog);\r\n\r\n        return () => {\r\n            socket.removeListener(\"SERVER:DIALOG_CREATED\", onNewDialog);\r\n            socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewDialog);\r\n        }\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        if(items.length) {\r\n            onChangeInput()\r\n        }\r\n    },[items])\r\n\r\n\r\n\r\n    return <Dialogs items={filtred} onSearch={onChangeInput} inputValue={inputValue} setCurrentDialog={setCurrentDialog}/>\r\n}\r\n\r\nexport default connect(\r\n    ({dialogReduser}) => dialogReduser, actions)(DialogsContainer);","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\ChatInput\\ChatInput.js",["243","244"],"import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport  { Input,Button} from \"antd\";\r\nimport './ChatInput.scss'\r\nimport { UploadField } from '@navjobs/upload'\r\n\r\nimport {AudioOutlined, CameraOutlined, FrownOutlined, LoadingOutlined, SendOutlined} from '@ant-design/icons'\r\n\r\nimport { Picker } from 'emoji-mart'\r\nimport UploadFiles from \"../UploadFile/UploadFiles\";\r\nimport socket from \"../../core/socket\";\r\n\r\nconst ChatInput = (props) => {\r\n    const {isLoading,removeAttachments,userReducer,setisLoading,mediaRecorder,fetchSendMessage,currentDialog,attachments,onSelectFiles,handleStartRecording,isRecording,onStopRecording} = props\r\n\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        if(isRecording) {\r\n            onStopRecording()\r\n\r\n        } else if (props.value || attachments) {\r\n            fetchSendMessage({text: props.value,_id:currentDialog,attachments:attachments.map(file => file.uid  )})\r\n        }\r\n\r\n        props.setValue(\"\")\r\n        props.setAttachments([])\r\n\r\n    }\r\n\r\n\r\n    const setEmoji = ({colons}) => {\r\n        props.setValue(props.value + \" \" + colons)\r\n    }\r\n    const SendMessage = (e) => {\r\n        socket.emit(\"DIALOGS:TYPING\", {currentDialog,userReducer})\r\n        if (e.keyCode === 13) {\r\n            handleSendMessage()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chat__dialog-input\">\r\n            <div className=\"chat__dialog-input-area\">\r\n                <div className=\"chat-input__smile-btn\">\r\n                    {props.emojiPickerVisible && <div className=\"chat-input__emoji-picker\">\r\n                        <Picker onSelect={(emojiTag) =>setEmoji(emojiTag)} set='apple' />\r\n                    </div>}\r\n                    <Button onClick={props.toggleEmojiPicker} type=\"link\"   icon={<FrownOutlined />} />\r\n                </div>\r\n                <Input onChange={e => props.setValue(e.target.value)}\r\n                       value={props.value}\r\n                       onKeyUp={SendMessage}\r\n                       size='large' placeholder=\"Введите сообщение\"  style={{ width: '100%' }} />\r\n                <div className=\"chat-input__actions\">\r\n                    <div>\r\n                        <UploadField\r\n                            onFiles={onSelectFiles}\r\n                            containerProps={{\r\n                                className: 'photos'\r\n                            }}\r\n                            uploadProps={{\r\n                                accept: '.pdf,.doc,.docx,.txt,.rtf',\r\n                            }}\r\n                        >\r\n                            <div>\r\n                                <Button type=\"link\" size='large'  icon={<CameraOutlined />} onClick />\r\n                            </div>\r\n\r\n                        </UploadField>\r\n                    </div>\r\n                    {isLoading ? <LoadingOutlined /> :\r\n                    isRecording || props.value || attachments.length  ? <div>\r\n                        <button onClick={onStopRecording}>Стоп машина</button>\r\n                        <Button  onClick={handleSendMessage}  icon={<SendOutlined />} />\r\n                    </div> :<div>\r\n                        <Button onClick={handleStartRecording} type=\"link\"  icon={<AudioOutlined />} />\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            {attachments.length > 0 && <div className={'chat-input__attachments'}>\r\n                <UploadFiles  removeAttachments={removeAttachments} attachments={attachments}/>\r\n                </div>}\r\n\r\n        </div>\r\n\r\n        )\r\n\r\n};\r\n\r\nChatInput.propTypes = {\r\n    className: PropTypes.string\r\n}\r\n\r\n\r\nexport default ChatInput;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\MessageItem\\MessageItem.js",["245","246","247"],"import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Spin,Empty} from 'antd';\r\nimport Message from \"../Message/Message\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport classNames from \"classnames\";\r\nimport \"./MessageItems.scss\"\r\nimport {Modal} from \"antd\"\r\n\r\n\r\n\r\n\r\nconst MessageItem = ({isTyping,setPreviewImage,previewImage,blockref,LayoutHeight,isLoading,items, user,onRemoveMessage}) => {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: '80px' }} spin />\r\n    return ( <div ref={blockref} className=\"chat__dialog-message\" style={{\"height\": `calc(100% - ${LayoutHeight}px )`}}><div className={classNames( {'message__loading' : isLoading })}>\r\n            {\r\n                isLoading ? (<Spin indicator={antIcon} tip=\"Загрузка сообщений\"/>) : items !=0 && !isLoading ? (\r\n                items.map(item => <Message isTyping={isTyping} setPreviewImage={setPreviewImage} {...item} onRemoveMessage={ onRemoveMessage.bind(this, item._id)} isMe={user && user._id === item.user._id}/>)) : (<Empty description='Нет сообщений'/>)\r\n            }\r\n        <Modal footer={null} visible={!!previewImage}  onCancel={() => {\r\n            setPreviewImage(null)\r\n        }}>\r\n            <img src={previewImage} style={{width: \"100%\",height:\"70vh\"}} alt=\"Preview image\"/>\r\n        </Modal>\r\n\r\n    </div></div>)\r\n\r\n}\r\n\r\n\r\nMessageItem.propTypes = {\r\n    items: PropTypes.array\r\n}\r\nexport default MessageItem;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Message\\Message.js",["248","249","250","251","252"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport reactStringReplace from \"react-string-replace\"\r\nimport './Messag.scss';\r\nimport  formatDistanceToNow from 'date-fns/formatDistanceToNow/index.js'\r\nimport { parseISO } from 'date-fns'\r\nimport {ru} from \"date-fns/locale/ru\"\r\nimport classNames from 'classnames'\r\nimport IconRead from \"../IconRead/IconRead\";\r\nimport  { Popover,Button} from 'antd';\r\nimport wave from 'assets/wawe.svg';\r\nimport play from 'assets/play.svg';\r\nimport pause from 'assets/pause.svg';\r\nimport {convertCurrentTime} from \"../../utils/helpers\";\r\nimport {DeleteOutlined, EyeOutlined} from '@ant-design/icons'\r\nimport {Emoji} from \"emoji-mart\";\r\n\r\nexport const AudioMessage = ({item}) => {\r\n\r\n\r\n\r\n    let audioElem = item ;\r\n\r\n    const [isPlaying, setPlaying] = useState(false)\r\n    const [progress, setProgress] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(0)\r\n    audioElem = useRef(null);\r\n\r\n    useEffect(() => {\r\n            audioElem.current.addEventListener('playing', () => {\r\n                setPlaying(true);\r\n            }, false);\r\n            audioElem.current.addEventListener('ended', () => {\r\n                convertCurrentTime(0)\r\n                setProgress(0);\r\n                setPlaying(false);\r\n            }, false);\r\n            audioElem.current.addEventListener('pause', () => {\r\n                setPlaying(false);\r\n            }, false);\r\n            audioElem.current.addEventListener('timeupdate', () => {\r\n                const duration = audioElem.current && audioElem.current.duration || 0;\r\n                setCurrentTime(audioElem.current.currentTime)\r\n                setProgress((audioElem.current.currentTime / duration) * 100);\r\n            }, false);\r\n\r\n        },\r\n        [\r\n        ])\r\n\r\n    const togglePlay =  () => {\r\n        if(!isPlaying) {\r\n            audioElem.current.play()\r\n        } else {\r\n            audioElem.current.pause()\r\n        }\r\n    }\r\n    return (\r\n        <div className={\"message__audio\"}>\r\n            <div className={\"message__buble\"} >\r\n            <audio src={item.url} ref={audioElem}  preload={'auto'}/>\r\n            <div className=\"message__audio-progress\" style={{width: progress + '%' }}>\r\n            </div>\r\n            <div className=\"message__audio-info\">\r\n                <div className=\"message__audio-btn\">\r\n                    <button onClick={togglePlay}>\r\n                        {isPlaying ? <img src={pause} alt={'pause'}/> : <img src={play} alt={'play'}/> }\r\n                    </button>\r\n                </div>\r\n                <div className=\"message__audio-wawe\">\r\n                    <img src={wave} alt={'Wawe svg'}/>\r\n                </div>\r\n                <span className=\"message__audio-duration\">\r\n                                            {convertCurrentTime(currentTime)}\r\n                                        </span>\r\n            </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst getAvatar = avatar => {\r\n    if (avatar) {\r\n        return <img src={avatar} alt={'user avatar'}/>\r\n    } else {\r\n        return <img src={\"https://im0-tub-ua.yandex.net/i?id=dce7865b6a1246be224f5dcc0968f813&n=13\"} alt={'user avatar'}/>\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Message = ({setPreviewImage,user,createdAt,text,isTyping,isMe,attachments,avatar,onRemoveMessage }) => {\r\n    const renderAttachment = (item) => {\r\n        if(item.ext !== \"webm\") {\r\n            return (<div  className=\"message__attachments-item\">\r\n                <EyeOutlined onClick={() => {setPreviewImage(item.url)}} />\r\n                <img src={item.url}/>\r\n            </div>)} else {\r\n                return  <AudioMessage item={item} />\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const content = (\r\n        <div>\r\n            <button onClick={onRemoveMessage}>Удалить</button>\r\n        </div>\r\n    );\r\n\r\n    const isAudio = () => {\r\n            const file = attachments[0];\r\n            return attachments.length && file.ext === 'webm'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classNames('message', {'message__isMe': isMe , 'message__is-typing' : isTyping, 'message__image-one' : !isAudio() && attachments && attachments.length === 1 && !text, \"message__is-audio\" : isAudio() })}>\r\n\r\n            <div className={'message__avatar'}>\r\n                {getAvatar(avatar)}\r\n            </div>\r\n            <div>\r\n                <div className={classNames('message__content', {'message__isMe-content': isMe})}>\r\n                    {(text || isTyping) && (\r\n                        <div className={classNames('message__buble', {'message__buble-me': isMe})}>\r\n                            {text && <p className={\"message__text\"}>{reactStringReplace(text,/:(.+?):/g,(match,i)=> (\r\n                                <Emoji emoji={match} set='apple' size={16} />\r\n                            ))}</p>}\r\n                            {isTyping && <div className=\"message__typing\">\r\n                                <span className=\"dot one\"></span>\r\n                                <span className=\"dot two\"></span>\r\n                                <span className=\"dot three\"></span>\r\n                            </div>}\r\n                            {\r\n                                false &&  <AudioMessage audio={null} />\r\n                            }\r\n\r\n\r\n                        </div>)}\r\n                    <Popover placement=\"top\"  content={content} trigger=\"click\">\r\n                        <Button className='trash__button'><DeleteOutlined /></Button>\r\n                    </Popover>\r\n                </div>\r\n\r\n                {createdAt && <span className={'message__date'}>{formatDistanceToNow(parseISO(createdAt),{addSuffix: true},{locale: ru})}</span>}\r\n            </div>\r\n\r\n                {attachments &&(\r\n                    <div className=\"message__attachments\">\r\n                        {attachments.map(item => renderAttachment(item))}\r\n                </div>)}\r\n            {/*<IconRead  isReaded={props.isReaded}/>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Auth\\Auth.jsx",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\components\\LoginForm.jsx",["253","254","255"],"import React from 'react';\r\nimport {Form, Input} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {WhiteBlock} from \"../../../components\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport {validateField} from \"utils/helpers\";\r\nimport FormField from \"../../../components/FormField/FormField\";\r\n\r\n\r\n// const validate = (key, touched, errors) => {\r\n//     if (touched[key]) {\r\n//         if (errors[key]) {\r\n//             return 'error';\r\n//         } else {\r\n//             return 'success';\r\n//         }\r\n//     } else {\r\n//         return '';\r\n//     }\r\n// }\r\n//\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    const layout = {\r\n        labelCol: {span: 4},\r\n        wrapperCol: {span: 30},\r\n    };\r\n    const tailLayout = {\r\n        wrapperCol: {offset: 0, span: 30},\r\n    };\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        history,\r\n        isAuth\r\n    } = props;\r\n    return (\r\n        <div>\r\n            <div className={\"auth__top\"}>\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <WhiteBlock>\r\n                <Form\r\n                    {...layout}\r\n                    name=\"LoginForm\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        hasFeedback\r\n                        validateStatus={validateField('email', touched, errors)}\r\n\r\n\r\n                    >\r\n                        <Input size={\"large\"} placeholder=\"Введите логин\" onChange={handleChange} onBlur={handleBlur}\r\n                               id='email' value={values.name}/>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        validateStatus={validateField('password', touched, errors)}\r\n\r\n\r\n                    >\r\n                        <Input.Password size={\"large\"} placeholder=\"Введите пароль\" onChange={handleChange}\r\n                                        onBlur={handleBlur} id='password' value={values.password}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button className={\"large__button\"} type=\"primary\" htmlType=\"submit\" onClick={handleSubmit} disabled={isSubmitting}>\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link to={'/register'} className={'auth__link-registered'}>Зарегистрироваться</Link>\r\n                </Form>\r\n            </WhiteBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\IconRead\\IconRead.js",["256"],"import сheckedIco from \"../../assets/svg-editor-image (1).svg\";\r\nimport React from \"react\";\r\n\r\nconst IconRead = ({isReaded}) => {\r\n        return (\r\n            isReaded &&\r\n                <div className={'message__chek'}>\r\n                    <img src={сheckedIco}/>\r\n                </div>\r\n          )\r\n}\r\n\r\nexport default IconRead;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\LoginForm\\containers\\LoginContainer.js",["257","258","259"],"\r\nimport {withFormik} from \"formik\";\r\nimport validateFunc from \"../../../utils/validator\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport store from \"../../../redux/store\";\r\nimport {UsserAction} from \"../../../redux/actions/UsserAction\";\r\nimport React from \"react\";\r\nimport Home from \"../../../pages/Home/Home\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nconst LoginContainer =  withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: ''\r\n    }),\r\n    // Custom sync validation\r\n    validate: values => {\r\n        let errors = {};\r\n        const validator = validateFunc({ isAuth: true});\r\n        const keys = Object.keys(values);\r\n        keys.forEach(key =>validator[key] && validator[key](errors,values[key]));\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, { setSubmitting,props}) => {\r\n        store.dispatch(UsserAction.fetchUserLogin(values)).then(({status}) =>{\r\n            if (status === 'success') {\r\n                    props.props.history.push('/')\r\n            }\r\n            setSubmitting(false)\r\n        })\r\n    },\r\n\r\n    displayName: 'LoginForm',\r\n})(LoginForm);\r\n\r\n\r\n\r\nexport default LoginContainer;\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\containers\\RegisterContainer.js",["260"],"\r\nimport {withFormik} from \"formik\";\r\nimport RegisterForm from \"../components/RegisterForm\";\r\nimport validateFunc from \"../../../utils/validator\";\r\nimport store from \"../../../redux/store\";\r\nimport {UsserAction as UserAction} from \"../../../redux/actions/UsserAction\";\r\n\r\n\r\n\r\nconst RegisterContainer =  withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n        fullname: ''\r\n    }),\r\n    // Custom sync validation\r\n    // validate: values => {\r\n    //     let errors = {};\r\n    //     const validator = validateFunc({ isAuth: false});\r\n    //     const keys = Object.keys(values);\r\n    //     keys.forEach(key =>validator[key] && validator[key](errors,values[key]));\r\n    //     return errors;\r\n    // },\r\n\r\n\r\n    handleSubmit: (values, { setSubmitting,props}) => {\r\n        store.dispatch(UserAction.fetchUserRegister(values)).then(({status}) =>{\r\n            if (status === 'success') {\r\n                setTimeout(() =>{\r\n                    props.props.history.push('/')\r\n                }, 50)\r\n            }\r\n\r\n        })\r\n    },\r\n\r\n    displayName: 'RegisterForm',\r\n})(RegisterForm);\r\n\r\nexport default  RegisterContainer","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Button\\Button.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\validator.js",["261"],"export  default   ({isAuth}) =>( {\r\n    email: (errors, values) => {\r\n        if (!values) {\r\n            errors.email = 'Эмаил указан не корректно';\r\n        }\r\n\r\n    },\r\n    name: (errors, values) => {\r\n        if (!values) {\r\n            errors.name = 'Пожалуйста впишите Имя';\r\n        }\r\n    },\r\n    password: (errors, values) => {\r\n        if (!values) {\r\n            errors.password = isAuth ? \"Не верный пароль\" : 'Введите пароль';\r\n        }\r\n    }\r\n})\r\n\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\WhiteBlock\\WhiteBlock.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\convertCurrentTime.js",["262"],"export default (number) => {\r\n    const mins = Math.floor(number / 60);\r\n    const secs = (number % 60).toFixed();\r\n    return  `${mins < 10 ? `0` : `` }${mins}:${secs < 10 ? `0` : ``}${secs}`\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\Dialogs\\Dialogs.jsx",["263"],"import React from 'react';\r\nimport './Dialogs.scss'\r\nimport classNames from 'classnames'\r\nimport { Input, Empty } from 'antd';\r\nimport {DialogItem} from \"../index\";\r\n\r\nimport {orderBy} from \"lodash\";\r\nconst { Search } = Input;\r\n\r\nconst Dialogs = ({items, userId, onSearch, inputValue,setCurrentDialog}) => {\r\n    debugger\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"chat__sidebar-search\">\r\n                <Search placeholder=\"Поиск среди контактов\"  style={{ width: 280 }} onChange={e => onSearch(e.target.value)} value={inputValue} />\r\n            </div>\r\n            {items.length ? orderBy(items,['created_at'],['desc']).map(item => (\r\n\r\n                <DialogItem\r\n                    key={item._id}\r\n                    _id={item._id}\r\n                    user={item.user}\r\n                    partner={item.partner}\r\n                    message={item}\r\n                    unreaded={0}\r\n                    date={item.date}\r\n                    userId={userId}\r\n                    avatar={item.avatar}\r\n                    isMe={item.lastMessage.user.id === item.author.id }\r\n                    onSelect={setCurrentDialog}\r\n                    onSearch = {onSearch}\r\n                    lastMessage={item.lastMessage}\r\n                />\r\n                )) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description='Нет контактов' />\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\DialogItem\\DialogItem.jsx",["264","265"],"import React from 'react';\r\nimport './DialogItem.scss'\r\nimport {formatDistanceToNow, parseISO} from 'date-fns'\r\nimport rulocale from 'date-fns/locale/ru'\r\nimport classNames from 'classnames'\r\nimport IconRead from \"../IconRead/IconRead\";\r\nimport {format} from 'date-fns'\r\nimport {isToday} from 'date-fns'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst getAvatar = avatar => {\r\n    if (avatar) {\r\n        return <img src={avatar} alt={'user avatar'}/>\r\n    } else {\r\n        return <img src={\"https://im0-tub-ua.yandex.net/i?id=dce7865b6a1246be224f5dcc0968f813&n=13\"} alt={'user avatar'}/>\r\n    }\r\n}\r\n\r\n// <span>{formatDistanceToNow(date, {\r\n//     addSuffix: true,\r\n//     locale: rulocale})}</span>\r\n\r\nconst getMessageTime = created_at => {\r\n    if (isToday(created_at)) {\r\n        return format(created_at, 'HH:mm'\r\n        )\r\n    } else {\r\n        return format(created_at, 'MM.dd.yyyy')\r\n    }\r\n}\r\n\r\n\r\nconst DialogItem = ({_id,partner,userId, isMe,avatar,onSelect,lastMessage}) => {\r\n    debugger\r\n    return (\r\n        <Link to={`/dialog/${_id}`} onClick={onSelect.bind(this, _id)}  >\r\n        <div  className={classNames(\"dialogs__item\", 'active', {\"dialogs__item--online\": partner.isOnline})}>\r\n            <div className=\"dialogs__item-avatar\">\r\n                {getAvatar(partner.avatar || avatar )}\r\n            </div>\r\n            <div className={'dialogs__item-info'}>\r\n                <div className=\"dialogs__item-info-top\">\r\n\r\n                    <b>{partner.fullname}</b>\r\n                    <span>\r\n                        {getMessageTime(parseISO(lastMessage.createdAt))}\r\n                    </span>\r\n                </div>\r\n                <div className=\"dialogs__item-info-bottom\">\r\n                    <p>{isMe=true ? `Вы: ${lastMessage.text}`: lastMessage.text} </p>\r\n                    {isMe && <IconRead isMe={true} isReaded={false}/> }\r\n                    {lastMessage.unreaded > 0 && <div className=\"dialogs__item-info-bottom-count\">\r\n                        {lastMessage.unreaded}\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\validateField.js",["266"],"export default  (key,touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return 'error';\r\n        } else {\r\n            return 'success';\r\n        }\r\n    } else {\r\n        return '';\r\n    }\r\n\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\components\\RegisterForm.jsx",["267"],"import React from 'react';\r\nimport {Form} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {WhiteBlock} from \"../../../components\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport {ExclamationCircleTwoTone} from '@ant-design/icons';\r\nimport {validateField} from \"utils/helpers\";\r\nimport FormField from \"../../../components/FormField/FormField\";\r\n\r\nconst layout = {\r\n    labelCol: {span: 4},\r\n    wrapperCol: {span: 30},\r\n  };\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 0, span: 30},\r\n};\r\n\r\n\r\nconst success = true;\r\nconst RegisterForm = (props) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting\r\n    } = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className={\"auth__top\"}>\r\n                <h2>Регистрация</h2>\r\n                <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n            </div>\r\n            <WhiteBlock>\r\n                {success ? <Form\r\n                    {...layout}\r\n                    name=\"RegisterForm\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <FormField size='large' name='fullname' handleBlur={handleBlur} handleChange={handleChange} touched={touched} errors={errors}  values={values} placeholder='Введите ваше имя' />\r\n                    <FormField size='large' name='email' handleBlur={handleBlur} handleChange={handleChange} touched={touched} errors={errors}  values={values} placeholder='Введите ваш эмеил' />\r\n                    <FormField size='large' name='password' handleBlur={handleBlur} handleChange={handleChange} touched={touched} errors={errors}  values={values} placeholder='Введите ваш пароль' />\r\n\r\n\r\n\r\n                    <Form.Item {...tailLayout}>\r\n                        <Button className={\"large__button\"} type=\"primary\" htmlType=\"submit\" onClick={handleSubmit} disabled={isSubmitting}>\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link to={'/login'} className={'auth__link-registered'}>Войти</Link>\r\n                </Form> : <div className={\"auth__sucess-block\"}>\r\n                    <ExclamationCircleTwoTone style={{fontSize: '50px', color: \"hotpink\"}}/>\r\n                    <h2>Подтвердите свой аккаунт</h2>\r\n                    <p>На вашу почту отправлено письмо с ссылкой на подтверждение аккаунта</p>\r\n                </div>}\r\n            </WhiteBlock>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default RegisterForm;\r\n\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\store.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\dialogReduser.js",["268"],"\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n    currentDialog: window.location.pathname.split('dialog/')[1],\r\n    isLoading: false\r\n}\r\n\r\nexport default (state = initialState, {type,payload}) => {\r\n    switch (type){\r\n        case\"DIALOGS : SET_ITEMS\":\r\n            return {\r\n                ...state,\r\n                items: payload\r\n            };\r\n        case  \"DIALOG:SET_CURRENT_DIALOG\":\r\n            return {\r\n                ...state,\r\n                currentDialog: payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\DialogsAction.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\DialogsAPI.js",["269"],"import axios from \"./../../core/axios\"\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    getAll: ()=> axios.get('/dialogs'),\r\n    create: ({_id,text}) => axios.post('/dialogs',{partner: _id,text})\r\n\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\core\\axios.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\MessageContainer.js",["270","271","272"],"import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport MessageItem from \"../components/MessageItem/MessageItem\";\r\nimport actions from \"../redux/actions/MessageAction\";\r\nimport socket from \"../core/socket\";\r\nimport {Empty} from \"antd\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MessageContainer = ({Attachments, currentDialog,fetchMessage,addMessage,removeMessage, items,isLoading,userReducer}) => {\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n    const [LayoutHeight, setLayoutHeight] = useState(135);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    let typingTimeout = null;\r\n    const messagesRef = useRef(null);\r\n    const onNewMessage = data => {\r\n        addMessage(data)\r\n    }\r\n    const toggleIsTyping = () => {\r\n        setIsTyping(true)\r\n        clearInterval(typingTimeout)\r\n        typingTimeout = setTimeout(() => {\r\n            setIsTyping(false)\r\n        }, 3000)\r\n    }\r\n    useEffect(() => {\r\n        socket.on(\"DIALOGS:TYPING\", toggleIsTyping)\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        if(Attachments.length > 0 ) {\r\n            setLayoutHeight(277)\r\n        } else {\r\n            setLayoutHeight(135)\r\n        }\r\n    },[Attachments])\r\n\r\n\r\n    useEffect(() => {\r\n            if (currentDialog) {\r\n                fetchMessage(currentDialog)\r\n            }\r\n            socket.on(\"SERVER:NEW_MESSAGE\", onNewMessage)\r\n\r\n            return() => {\r\n                socket.removeListener(\"SERVER:NEW_MESSAGE\", onNewMessage)\r\n            }\r\n        },[currentDialog]\r\n    )\r\n\r\n\r\n    useEffect(() => {\r\n        if(!currentDialog ) {\r\n            return <Empty description='Нет сообщений'/>;\r\n        }\r\n            messagesRef.current.scrollTo(0, 999999)\r\n    },[items])\r\n\r\n\r\n\r\n    return currentDialog ?  <MessageItem isTyping={isTyping} LayoutHeight={LayoutHeight} previewImage={previewImage}  setPreviewImage={setPreviewImage} user={userReducer} blockref={messagesRef} onRemoveMessage={removeMessage} items={items} isLoading={isLoading && !userReducer}/> : <Empty description='Нет сообщений'/>\r\n}\r\n\r\nexport default connect(\r\n    ({dialogReduser,MessageReducer,userReducer,Attachments}) => ({currentDialog:dialogReduser.currentDialog,items: MessageReducer.items,isLoading: MessageReducer.isLoading,userReducer:userReducer.data,Attachments: Attachments.items}),actions)(MessageContainer);","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\MessageReducer.js",["273"],"const initialState = {\r\n    items: [],\r\n    isLoading: false\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case\"MESSAGES : ADD_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                items: [\r\n                    ...state.items,\r\n                    payload\r\n                ]\r\n\r\n            };\r\n        case\"MESSAGES : SET_ITEMS\":\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n                isLoading: false\r\n            };\r\n        case\"MESSAGES : SET_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: payload\r\n            };\r\n            case\"MESSAGES:REMOVE_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                items:state.items.filter(message => message._id !== payload)\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\MessageAction.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\MessageAPI.js",["274"],"import axios from \"./../../core/axios\"\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    getAllByDialogId: id => axios.get('/messages?dialog=' + id),\r\n    removeMessage: id => axios.delete('/messages?id=' + id),\r\n    send: (text, _id,attachments) => axios.post('/messages', {\r\n        \"text\" : text,\r\n        \"_id\" : _id,\r\n        attachments\r\n    }),\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\helpers\\openNotification.js",["275"],"import { notification } from 'antd';\r\n\r\n\r\n\r\nexport default  ({text,type='info',title}) => notification.open({\r\n    message: title,\r\n    description: text\r\n});","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\userReducer.js",["276"],"const initialState = {\r\n    data: null,\r\n    isAuth: false,\r\n    token: window.localStorage.token,\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case\"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data:payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token\r\n            };\r\n            case\"USER:SET_IS_AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: payload\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\UsserAction.js",["277"],"import UserAPI from \"../../utils/api/UserAPI\";\r\nimport openNotification from \"../../utils/helpers/openNotification\";\r\n\r\n\r\nexport const UsserAction =  {\r\n    setUserData: data => ({\r\n        type: \"USER:SET_DATA\",\r\n        payload: data\r\n    }),\r\n    setIsAuth: bool => ({\r\n        type: \"USER:SET_IS_AUTH\",\r\n        payload: bool\r\n    }),\r\n    fetchUserData: () => dispatch => {\r\n        UserAPI.getMe().then(({data}) => {\r\n            dispatch(UsserAction.setUserData(data))\r\n        }).catch(err => {\r\n            if(err.response.status === 403) {\r\n                dispatch(UsserAction.setIsAuth(false))\r\n                delete window.localStorage.token\r\n            }\r\n        })\r\n    },\r\n\r\n    fetchUserLogin: (postData) => dispatch => {\r\n        return UserAPI.login(postData).then(({data})=> {\r\n                const {status,token} = data;\r\n                if(status === 'error'){\r\n                    openNotification({\r\n                        title: \"Ошибка при авторизации\",\r\n                        text: \"Неверный логин или пароль\",\r\n                        type: \"error\"\r\n                    })\r\n                } else {\r\n                    openNotification({\r\n                        text: \"Авторизация прошла успешно\",\r\n                        type: \"success\"\r\n                    })\r\n                    window.axios.defaults.headers.common['token'] = token;\r\n                    window.localStorage['token'] = token;\r\n                        dispatch(UsserAction.fetchUserData())\r\n                        dispatch(UsserAction.setIsAuth(true))\r\n                }\r\n                return data;\r\n\r\n\r\n        })\r\n    },\r\n    fetchUserRegister: (postData) => dispatch => {\r\n         return UserAPI.register(postData).then(({data})=> {\r\n            const {status,token} = data;\r\n            if(status === 'error'){\r\n                openNotification({\r\n                    title: \"Ошибка при регистрации\",\r\n                    text: \"Неверный логин или пароль\",\r\n                    type: \"error\"\r\n                })\r\n            } else {\r\n                openNotification({\r\n                    text: \"Регистрация прошла успешно\",\r\n                    type: \"success\"\r\n                })\r\n            }\r\n            return data;\r\n\r\n\r\n\r\n         })\r\n    }\r\n}\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\UserAPI.js",["278"],"import axios from \"./../../core/axios\"\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    login: postData => axios.post('/user/login',postData),\r\n    register: postData => axios.post('/user/registration',postData),\r\n    verifyHash: hash => axios.get('/user/verify?hash' + hash),\r\n    getMe: () => axios.get('/user/me'),\r\n    findUsers: query => axios.get('/user/find?query=' + query)\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\FormField\\FormField.jsx",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\moduls\\RegisterForm\\index.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\pages\\Success\\Success.jsx",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\core\\socket.js",[],"C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\ChatInputContainer.js",["279","280"],"import React, {useState,useEffect} from 'react';\r\nimport ChatInput from \"../components/ChatInput/ChatInput\";\r\nimport {connect} from \"react-redux\";\r\nimport MessageAction from \"../redux/actions/MessageAction\";\r\nimport AttahmentsAction from '../redux/actions/AttachmentsAction'\r\nimport UploadAPI from \"../utils/api/UploadAPI\";\r\nwindow.navigator.getUserMedia = (window.navigator.getUserMedia ||\r\n    window.navigator.mozGetUserMedia ||\r\n    window.onabort.msGetUserMedia ||\r\n    window.navigator.webkitGetUserMedia\r\n)\r\n\r\nconst ChatInputContainer = ({dialogReduser: {currentDialog},Attachments,fetchSendMessage,setAttachments,removeAttachments,userReducer}) => {\r\n    const [value, setValue] = useState('');\r\n    const [isRecording, setIsRecording] = useState(\"\");\r\n    const [mediaRecorder, setMediaRecorder] = useState(null);\r\n    const [emojiPickerVisible, setshowEmojiPiccker] = useState(false);\r\n    const [isLoading, setisLoading] = useState(\"\");\r\n    const toggleEmojiPicker = () => {\r\n        setshowEmojiPiccker(!emojiPickerVisible);\r\n    }\r\n\r\n    const onStopRecording = () => {\r\n        mediaRecorder.stop()\r\n        setIsRecording(false)\r\n\r\n    }\r\n    const onRecord = () => {\r\n        if(navigator.getUserMedia) {\r\n            navigator.getUserMedia({audio:true},onRecording,onError)\r\n        }\r\n\r\n    }\r\n    const onRecording =  stream =>  {\r\n        const recorder = new MediaRecorder(stream)\r\n        setMediaRecorder(recorder)\r\n        recorder.start()\r\n\r\n        recorder.onstart = () => {\r\n            setIsRecording(true)\r\n        }\r\n\r\n        recorder.onstop = () => {\r\n            setIsRecording(false)\r\n        }\r\n\r\n        recorder.ondataavailable = function (e) {\r\n           const file = new File([e.data],\"audio.ogg\",{type:\"audio/ogg\"});\r\n           setisLoading(true)\r\n           UploadAPI.upload(file).then(({data})=> {\r\n               sendAudio(data.file._id)\r\n               setisLoading(false)\r\n           })\r\n\r\n        }\r\n    }\r\n\r\n    const sendAudio = (audioId) => {\r\n        fetchSendMessage({text: null,_id:currentDialog,attachments:[audioId]})\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err)\r\n    }\r\n\r\n\r\n    if(!currentDialog) {\r\n        return null\r\n    }\r\n\r\n    const  onSelectFiles = async files => {\r\n        let uploaded = []\r\n        for ( let i = 0; i <files.length; i++) {\r\n            const file = files[i]\r\n            const uid = Math.round(Math.random() * 1000)\r\n            uploaded = [\r\n                ...uploaded,\r\n                {\r\n                uid,\r\n                name: file.name,\r\n                status: 'uploading',\r\n            }]\r\n            setAttachments(uploaded)\r\n            await UploadAPI.upload(file).then(({data}) => {\r\n                uploaded = uploaded.map(item => {\r\n                    if(item.uid === uid) {\r\n                        return  {\r\n                            uid: data.file._id,\r\n                            name: data.file.filename,\r\n                            status: \"done\",\r\n                            url: data.file.url\r\n                        }\r\n                    }\r\n                    return item;\r\n                })\r\n            })\r\n        }\r\n        setAttachments(uploaded)\r\n    };\r\n\r\n\r\n    return (\r\n            <ChatInput\r\n                setisLoading={setisLoading}\r\n                isLoading={isLoading}\r\n                mediaRecorder={mediaRecorder}\r\n                isRecording={isRecording}\r\n                onStopRecording={onStopRecording}\r\n                handleStartRecording={onRecord}\r\n                setAttachments={setAttachments}\r\n                onSelectFiles={onSelectFiles}\r\n                attachments={Attachments}\r\n                toggleEmojiPicker={toggleEmojiPicker}\r\n                setValue={setValue}\r\n                userReducer={userReducer}\r\n                removeAttachments={removeAttachments}\r\n                emojiPickerVisible={emojiPickerVisible}\r\n                setshowEmojiPiccker={setshowEmojiPiccker}\r\n                value={value} fetchSendMessage={fetchSendMessage} currentDialog={currentDialog}/>\r\n\r\n    );\r\n};\r\n\r\nexport default connect(({dialogReduser,Attachments,userReducer}) => ({dialogReduser,Attachments:Attachments.items,userReducer: userReducer.data}), {...MessageAction, ...AttahmentsAction})( ChatInputContainer);","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\SideBar\\SideBar.jsx",["281","282","283"],"import React, {useState} from 'react';\r\nimport {FormOutlined, TeamOutlined} from \"@ant-design/icons\";\r\nimport {Button, Input, Modal, Option} from \"antd\";\r\nimport DialogsContainer from \"../../containers/DialogContainers\";\r\nimport './sideBar.scss'\r\nimport { Select, Spin } from 'antd';\r\n\r\nconst SideBar = ({messageText,onChangeTextArea,onAddDialog,isLoading,onShow,onClose,visible, users,onChangeInput,onSearch,inputValue,onSelect}) => {\r\n\r\n    const { Option } = Select;\r\n\r\n\r\n    function onBlur() {\r\n        console.log('blur');\r\n    }\r\n\r\n    function onFocus() {\r\n        console.log('focus');\r\n    }\r\n\r\n\r\n    const options = users.map(user => <Option key={user.id}  >{user.fullname}</Option> )\r\n\r\n    const { TextArea } = Input;\r\n\r\n    return (\r\n\r\n        <div className=\"chat__sidebar\">\r\n            <div className=\"chat__sidebar-header\">\r\n                <div className={\"chat__sidebar-header-ico\"} >\r\n                    <TeamOutlined className={'icon'} />\r\n                    <span>Список Диалогов</span>\r\n                </div>\r\n                <Button onClick={onShow}><FormOutlined /></Button>\r\n            </div>\r\n            <Modal centered title=\"Создать диалог\" visible={visible}\r\n                footer={[\r\n                    <Button key='back' onClick={onClose} >\r\n                        Закрыть\r\n                    </Button>,\r\n                    <Button disabled={!messageText} key='submit' type='primary' loading={isLoading} onClick={onAddDialog} >\r\n                        Создать\r\n                    </Button>\r\n            ]}>\r\n                <Select\r\n                    showSearch\r\n                    value={inputValue}\r\n                    style={{ width: 470 }}\r\n                    placeholder=\"Введите имя пользователя\"\r\n                    onChange={onChangeInput}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                    onSearch={onSearch}\r\n                    onSelect={onSelect}\r\n                >\r\n                    {options}\r\n                </Select>\r\n                <br/>\r\n                <TextArea  value={messageText} onChange={onChangeTextArea} rows={4} />\r\n            </Modal>\r\n\r\n            <div className=\"chat__sidebar-dialogs\">\r\n                <DialogsContainer userId={users.id} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideBar;","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\containers\\SideBarContainers.js",["284"],"import React, {useState} from 'react';\r\nimport SideBar from \"../components/SideBar/SideBar\"\r\nimport {connect} from \"react-redux\";\r\nimport UserAPI from \"../utils/api/UserAPI\";\r\nimport DialogsAPI from \"../utils/api/DialogsAPI\";\r\n\r\nconst SideBarContainers = () => {\r\n    const [visible,setVisible] = useState(false);\r\n    const [inputValue,setInputValue] = useState('');\r\n    const [users,setUsers] = useState([]);\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const [selectedUser,setSelectedUser] = useState(false);\r\n    const [messageText,setMessage] = useState(false);\r\n\r\n    const handleChangeInput = (value) => {\r\n        setInputValue(value)\r\n    };\r\n    const onSearch = (val) => {\r\n        setIsLoading(true)\r\n        UserAPI.findUsers(val).then(({data}) =>  {\r\n            setUsers(data)\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    const onClose = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n\r\n    const onAddDialog = () => {\r\n        DialogsAPI.create({\r\n            _id: selectedUser,\r\n            text:messageText\r\n        }).then(({data}) =>  {\r\n            onClose()\r\n        })\r\n    }\r\n    const onChangeTextArea = e => {\r\n        setMessage(e.target.value)\r\n    }\r\n\r\n\r\n    const onSelect= user => {\r\n        setSelectedUser(user)\r\n    }\r\n\r\n    return (\r\n        <SideBar messageText={messageText} onChangeTextArea={onChangeTextArea} onAddDialog={onAddDialog} onAddDialog={onAddDialog} isLoading={isLoading} users={users} onSearch={onSearch} onSelect={onSelect}  onChangeInput={handleChangeInput} inputValue={inputValue} visible={visible} onClose={onClose} onShow={() => {setVisible(true)}}/>\r\n    );\r\n};\r\n\r\nexport default connect(({userReducer}) => ({userReducer: userReducer.data})\r\n\r\n)(SideBarContainers);","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\components\\UploadFile\\UploadFiles.jsx",["285","286","287","288"],"import React, {useState,useEffect} from 'react';\r\n\r\nimport { Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadFiles = ({attachments,removeAttachments}) => {\r\n    const [state,setState] = useState({\r\n        previewVisible:false,\r\n        previewImage: '',\r\n        fileList: attachments\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            fileList:attachments\r\n        })\r\n    },[attachments])\r\n\r\n    const handleCancel = () => setState({...state, previewVisible: false });\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setState({...state, previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n                }\r\n            )\r\n\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => setState({...state, fileList });\r\n\r\n\r\n    return(\r\n        <>\r\n            <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={state.fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n                onRemove={file => removeAttachments(file)}\r\n            >\r\n            </Upload>\r\n            {/*<Modal*/}\r\n            {/*    visible={previewVisible}*/}\r\n            {/*    title={previewTitle}*/}\r\n            {/*    footer={null}*/}\r\n            {/*    onCancel={handleCancel}*/}\r\n            {/*>*/}\r\n            {/*    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />*/}\r\n            {/*</Modal>*/}\r\n        </>)\r\n}\r\n\r\nUploadFiles.defaultProps = {\r\n    attachments: []\r\n}\r\n\r\nexport default UploadFiles;\r\n\r\n\r\n","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\redusers\\Attachments.js",["289"],"const initialState = {\r\n    items: []\r\n}\r\n\r\nexport default (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case\"ATTACHMENTS:SET\":\r\n            return {\r\n                ...state,\r\n                items: payload\r\n            };\r\n            case\"ATTACHMENTS:DELETE\":\r\n                return{\r\n                    ...state,\r\n                    items:state.items.filter(item =>item.uid !== payload.uid)\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\utils\\api\\UploadAPI.js",["290"],"import axios from \"./../../core/axios\"\r\n\r\n\r\n\r\n\r\n\r\nexport default {\r\n    upload: (file)=> {\r\n        const formData = new FormData();\r\n        formData.append('file',file);\r\n        return axios.post('/files',formData,{\r\n            headers: {\r\n                \"Content-Type\" : \"multipart/form-data\"\r\n            }\r\n        })\r\n    }\r\n}","C:\\Users\\HP\\Desktop\\Pojekt\\chat-frontend\\src\\redux\\actions\\AttachmentsAction.js",["291"],"import DialogsAPI from \"../../utils/api/DialogsAPI\";\r\n\r\n\r\nconst  AttahmentsAction = {\r\n    setAttachments: items =>({\r\n        type: \"ATTACHMENTS:SET\",\r\n        payload: items\r\n    }),\r\n    removeAttachments: (file) =>({\r\n        type: \"ATTACHMENTS:DELETE\",\r\n        payload: file\r\n    })\r\n}\r\n\r\nexport  default  AttahmentsAction;",{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":2,"column":9,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"296","severity":1,"message":"300","line":2,"column":23,"nodeType":"298","messageId":"299","endLine":2,"endColumn":35},{"ruleId":"296","severity":1,"message":"301","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":24},{"ruleId":"296","severity":1,"message":"302","line":9,"column":9,"nodeType":"298","messageId":"299","endLine":9,"endColumn":15},{"ruleId":"296","severity":1,"message":"303","line":10,"column":8,"nodeType":"298","messageId":"299","endLine":10,"endColumn":15},{"ruleId":"304","severity":1,"message":"305","line":24,"column":8,"nodeType":"306","endLine":24,"endColumn":33,"suggestions":"307"},{"ruleId":"292","replacedBy":"308"},{"ruleId":"294","replacedBy":"309"},{"ruleId":"304","severity":1,"message":"310","line":39,"column":8,"nodeType":"306","endLine":39,"endColumn":10,"suggestions":"311"},{"ruleId":"304","severity":1,"message":"312","line":45,"column":7,"nodeType":"306","endLine":45,"endColumn":14,"suggestions":"313"},{"ruleId":"296","severity":1,"message":"314","line":14,"column":52,"nodeType":"298","messageId":"299","endLine":14,"endColumn":64},{"ruleId":"296","severity":1,"message":"315","line":14,"column":65,"nodeType":"298","messageId":"299","endLine":14,"endColumn":78},{"ruleId":"296","severity":1,"message":"316","line":1,"column":15,"nodeType":"298","messageId":"299","endLine":1,"endColumn":23},{"ruleId":"317","severity":1,"message":"318","line":17,"column":92,"nodeType":"319","messageId":"320","endLine":17,"endColumn":94},{"ruleId":"321","severity":1,"message":"322","line":23,"column":13,"nodeType":"323","endLine":23,"endColumn":96},{"ruleId":"296","severity":1,"message":"324","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"325","severity":1,"message":"326","line":41,"column":52,"nodeType":"327","messageId":"328","endLine":41,"endColumn":54},{"ruleId":"325","severity":1,"message":"326","line":41,"column":82,"nodeType":"327","messageId":"328","endLine":41,"endColumn":84},{"ruleId":"304","severity":1,"message":"329","line":47,"column":9,"nodeType":"306","endLine":48,"endColumn":10,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":100,"column":17,"nodeType":"323","endLine":100,"endColumn":38},{"ruleId":"296","severity":1,"message":"333","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":17},{"ruleId":"296","severity":1,"message":"334","line":42,"column":9,"nodeType":"298","messageId":"299","endLine":42,"endColumn":16},{"ruleId":"296","severity":1,"message":"335","line":43,"column":9,"nodeType":"298","messageId":"299","endLine":43,"endColumn":15},{"ruleId":"331","severity":1,"message":"332","line":8,"column":21,"nodeType":"323","endLine":8,"endColumn":44},{"ruleId":"296","severity":1,"message":"336","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":13},{"ruleId":"296","severity":1,"message":"337","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":12},{"ruleId":"296","severity":1,"message":"338","line":9,"column":9,"nodeType":"298","messageId":"299","endLine":9,"endColumn":17},{"ruleId":"296","severity":1,"message":"339","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":20},{"ruleId":"340","severity":1,"message":"341","line":1,"column":1,"nodeType":"342","endLine":18,"endColumn":3},{"ruleId":"340","severity":1,"message":"341","line":1,"column":1,"nodeType":"342","endLine":5,"endColumn":2},{"ruleId":"296","severity":1,"message":"343","line":3,"column":8,"nodeType":"298","messageId":"299","endLine":3,"endColumn":18},{"ruleId":"296","severity":1,"message":"344","line":3,"column":9,"nodeType":"298","messageId":"299","endLine":3,"endColumn":28},{"ruleId":"296","severity":1,"message":"345","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":16},{"ruleId":"340","severity":1,"message":"341","line":1,"column":1,"nodeType":"342","endLine":12,"endColumn":2},{"ruleId":"296","severity":1,"message":"346","line":7,"column":9,"nodeType":"298","messageId":"299","endLine":7,"endColumn":22},{"ruleId":"340","severity":1,"message":"341","line":10,"column":1,"nodeType":"342","endLine":25,"endColumn":2},{"ruleId":"340","severity":1,"message":"347","line":7,"column":1,"nodeType":"342","endLine":11,"endColumn":2},{"ruleId":"304","severity":1,"message":"348","line":33,"column":7,"nodeType":"306","endLine":33,"endColumn":9,"suggestions":"349"},{"ruleId":"304","severity":1,"message":"350","line":54,"column":11,"nodeType":"306","endLine":54,"endColumn":26,"suggestions":"351"},{"ruleId":"304","severity":1,"message":"352","line":63,"column":7,"nodeType":"306","endLine":63,"endColumn":14,"suggestions":"353"},{"ruleId":"340","severity":1,"message":"341","line":6,"column":1,"nodeType":"342","endLine":37,"endColumn":2},{"ruleId":"340","severity":1,"message":"347","line":7,"column":1,"nodeType":"342","endLine":15,"endColumn":2},{"ruleId":"340","severity":1,"message":"341","line":5,"column":1,"nodeType":"342","endLine":8,"endColumn":4},{"ruleId":"340","severity":1,"message":"341","line":7,"column":1,"nodeType":"342","endLine":25,"endColumn":2},{"ruleId":"296","severity":1,"message":"354","line":51,"column":27,"nodeType":"298","messageId":"299","endLine":51,"endColumn":32},{"ruleId":"340","severity":1,"message":"347","line":7,"column":1,"nodeType":"342","endLine":13,"endColumn":2},{"ruleId":"296","severity":1,"message":"355","line":1,"column":25,"nodeType":"298","messageId":"299","endLine":1,"endColumn":34},{"ruleId":"356","severity":1,"message":"357","line":84,"column":47,"nodeType":"358","messageId":"359","endLine":96,"endColumn":14},{"ruleId":"296","severity":1,"message":"316","line":1,"column":16,"nodeType":"298","messageId":"299","endLine":1,"endColumn":24},{"ruleId":"296","severity":1,"message":"360","line":3,"column":31,"nodeType":"298","messageId":"299","endLine":3,"endColumn":37},{"ruleId":"296","severity":1,"message":"361","line":6,"column":18,"nodeType":"298","messageId":"299","endLine":6,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":50,"column":106,"nodeType":"364","endLine":50,"endColumn":131},{"ruleId":"296","severity":1,"message":"365","line":3,"column":18,"nodeType":"298","messageId":"299","endLine":3,"endColumn":23},{"ruleId":"296","severity":1,"message":"366","line":4,"column":10,"nodeType":"298","messageId":"299","endLine":4,"endColumn":22},{"ruleId":"304","severity":1,"message":"367","line":28,"column":7,"nodeType":"306","endLine":28,"endColumn":20,"suggestions":"368"},{"ruleId":"296","severity":1,"message":"369","line":30,"column":11,"nodeType":"298","messageId":"299","endLine":30,"endColumn":23},{"ruleId":"340","severity":1,"message":"341","line":5,"column":1,"nodeType":"342","endLine":21,"endColumn":2},{"ruleId":"340","severity":1,"message":"347","line":7,"column":1,"nodeType":"342","endLine":17,"endColumn":2},{"ruleId":"296","severity":1,"message":"370","line":1,"column":8,"nodeType":"298","messageId":"299","endLine":1,"endColumn":18},"no-native-reassign",["371"],"no-negated-in-lhs",["372"],"no-unused-vars","'FormOutlined' is defined but never used.","Identifier","unusedVar","'TeamOutlined' is defined but never used.","'DialogsContainer' is defined but never used.","'Button' is defined but never used.","'SideBar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'setCurrentDialog'. Either include them or remove the dependency array.","ArrayExpression",["373"],["371"],["372"],"React Hook useEffect has missing dependencies: 'fetchDialogs', 'items', and 'onNewDialog'. Either include them or remove the dependency array. If 'fetchDialogs' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["374"],"React Hook useEffect has a missing dependency: 'onChangeInput'. Either include it or remove the dependency array.",["375"],"'setisLoading' is assigned a value but never used.","'mediaRecorder' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'IconRead' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'audioElem'. Either include it or remove the dependency array.",["376"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FormField' is defined but never used.","'history' is assigned a value but never used.","'isAuth' is assigned a value but never used.","'React' is defined but never used.","'Home' is defined but never used.","'Redirect' is defined but never used.","'validateFunc' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'classNames' is defined but never used.","'formatDistanceToNow' is defined but never used.","'rulocale' is defined but never used.","'validateField' is defined but never used.","Assign object to a variable before exporting as module default","React Hook useEffect has a missing dependency: 'toggleIsTyping'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has missing dependencies: 'fetchMessage' and 'onNewMessage'. Either include them or remove the dependency array. If 'fetchMessage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["378"],"React Hook useEffect has a missing dependency: 'currentDialog'. Either include it or remove the dependency array.",["379"],"'token' is assigned a value but never used.","'useEffect' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'uploaded', 'uploaded'.","ArrowFunctionExpression","unsafeRefs","'Option' is defined but never used.","'Spin' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Modal' is defined but never used.","'PlusOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["380"],"'handleCancel' is assigned a value but never used.","'DialogsAPI' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},"Update the dependencies array to be: [props, props.location.pathname, setCurrentDialog]",{"range":"397","text":"398"},"Update the dependencies array to be: [fetchDialogs, items, onNewDialog]",{"range":"399","text":"400"},"Update the dependencies array to be: [items, onChangeInput]",{"range":"401","text":"402"},"Update the dependencies array to be: [audioElem]",{"range":"403","text":"404"},"Update the dependencies array to be: [toggleIsTyping]",{"range":"405","text":"406"},"Update the dependencies array to be: [currentDialog, fetchMessage, onNewMessage]",{"range":"407","text":"408"},"Update the dependencies array to be: [currentDialog, items]",{"range":"409","text":"410"},"Update the dependencies array to be: [attachments, state]",{"range":"411","text":"412"},[923,948],"[props, props.location.pathname, setCurrentDialog]",[1261,1263],"[fetchDialogs, items, onNewDialog]",[1366,1373],"[items, onChangeInput]",[1769,1781],"[audioElem]",[1028,1030],"[toggleIsTyping]",[1527,1542],"[currentDialog, fetchMessage, onNewMessage]",[1737,1744],"[currentDialog, items]",[737,750],"[attachments, state]"]